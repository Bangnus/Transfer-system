generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "linux-musl-openssl-3.0.x"] // สำหรับ Docker Run หรือ Linux
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Users {
  id             Int             @id @default(autoincrement())
  cid            String?         @unique
  username       String?         @unique
  name           String?
  firstname      String?
  lastname       String?
  type           String?
  faccode        String?
  facname        String?
  depcode        String?
  depname        String?
  seccode        String?
  secname        String?
  email          String?
  studentCourses StudentCourse[] // วิชาที่นักศึกษาเพิ่มเอง
  // courseTransfers CourseTransfer[] // ความสัมพันธ์ one-to-many กับ CourseTransfer
}

model Faculties {
  id          Int           @id @default(autoincrement())
  faccode     String        @unique
  facname     String
  departments Departments[] // ความสัมพันธ์ one-to-many กับ Departments
}

model Departments {
  id      Int       @id @default(autoincrement())
  depcode String    @unique
  depname String
  seccode String    @unique
  secname String
  faccode String
  faculty Faculties @relation(fields: [faccode], references: [faccode])
}

// วิชาที่นักศึกษาเพิ่มเอง
model StudentCourse {
  id          Int    @id @default(autoincrement())
  courseCode  String
  courseName  String
  credit      String
  gpa         String
  description String
  usernameId  String
  user        Users @relation(fields: [usernameId], references: [username])
}

// วิชาที่ใช้ในการเทียบโอน
model TransferCourse {
  id          Int    @id @default(autoincrement())
  courseCode  String
  courseNameTH  String
  courseNameENG  String
  prerequisiteTH String
  prerequisiteENG String
  credit      String
  gpa         String
  descriptionTH String
  descriptionENG String
  // courseTransfersOld CourseTransfer[] @relation("OldCourse")
  // courseTransfersNew CourseTransfer[] @relation("NewCourse")
}

// model CourseTransfer {
//   id           Int            @id @default(autoincrement())
//   oldCourseId  Int
//   newCourseId  Int
//   username    Int
//   status       String
//   requestDate  DateTime
//   approvalDate DateTime?
//   reason       String?
//   reviewer     String
//   user         Users          @relation(fields: [username], references: [id])
//   oldCourse    TransferCourse @relation("OldCourse", fields: [oldCourseId], references: [id])
//   newCourse    TransferCourse @relation("NewCourse", fields: [newCourseId], references: [id])
// }
